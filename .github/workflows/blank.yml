name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    name: "${{ matrix.distribution.image }} / ${{ matrix.distribution.ros }} (${{ matrix.steps }})"

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        steps: ['action', 'manual']
        distribution: [
          # {image: 'ubuntu:22.04', ros: humble},
          # {image: 'ubuntu:24.04', ros: jazzy},
          {image: 'almalinux:8', ros: humble},
          # {image: 'almalinux:9', ros: jazzy},
        ]

    container:
      image: ${{ matrix.distribution.image }}

    steps:

      # act workaround
      - run: dnf -y module install nodejs:20

      - uses: ros-tooling/setup-ros@v0.7

      - name: generate repos file
        run: |
          cat << EOF > sources.repos
          repositories:
            src/examples:
              type: git
              url: https://github.com/ros2/examples.git
              version: humble
          EOF

      - name: build (action)
        uses: christianrauch/action-ros-ci@master
        if: ${{ matrix.steps == 'action' }}
        with:
          package-name: examples_rclcpp_minimal_publisher
          target-ros2-distro: ${{ matrix.distribution.ros }}
          no-symlink-install: true
          vcs-repo-file-url: sources.repos
          skip-tests: true

      - name: build (manual)
        if: ${{ matrix.steps == 'manual' }}
        run: |
          rosdep update
          vcs import --input sources.repos
          rosdep install --from-paths src --ignore-src -y --rosdistro ${{ matrix.distribution.ros }}
          . /opt/ros/${{ matrix.distribution.ros }}/setup.sh
          env
          colcon build --event-handlers=console_cohesion+ --packages-up-to examples_rclcpp_minimal_publisher
